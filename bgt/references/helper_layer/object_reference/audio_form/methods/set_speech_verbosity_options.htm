<html>
<head>
<style type="text/css">
<!--
a:link {
	text-decoration: none;
	color: blue;
}

a:visited {
	text-decoration: none;
	color: blue;
}

a:hover, a:active {
	text-decoration: underline;
	color: blue;
}
-->
</style>
<title>set_speech_verbosity_options</title>
</head>
<body>
<br>
<b>audio_form object</b><br>
<br>
This method will set various speech settings for controls.<br>
<br>
bool set_speech_verbosity_options(int control_id, string highlight_selection, string highlight_unselection, string deletion, string percentage, int keyboard_echo)<br>
<br>
Parameters:<br>
control_id<br>
The ID of the control you wish to change.<br>
highlight_selection<br>
The text that is to be spoken when text is highlighted.<br>
highlight_unselection<br>
The text to be spoken when text is no longer highlighted.<br>
deletion<br>
The text that is to be spoken when text is deleted.<br>
percentage<br>
The text to be spoken after the value of the progress bar is read.<br>
keyboard_echo<br>
One of the input box speech flags (see constants).<br>
<br>
Return value:<br>
true on success, false on failure.<br>
<br>
Remarks:<br>
None.<br>
<br>
Example:<br>
<pre>
// Make a simple form with a few buttons and a text field.

#include "form.bgt"

audio_form form;

void main()
{
form.create_window("Example Form", true);
int test=form.create_input_box("Test", "test", "", 0, false, false);
int ok=form.create_button("OK");
int cancel=form.create_button("E&xit");
form.set_speech_verbosity_options(test, "Selected", "Unselected", "Deleted", "%", textflag_characters);
while(true)
{
form.monitor();
wait(5);
if(form.is_pressed(ok))
{
exit();
}
if(form.is_pressed(cancel))
{
exit();
}
if((key_down(KEY_LMENU))&&(key_pressed(KEY_F4)))
{
exit();
}
}
}
</pre>
</body>
</html>