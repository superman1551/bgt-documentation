<html>
<head>
<style type="text/css">
<!--
a:link {
	text-decoration: none;
	color: blue;
}

a:visited {
	text-decoration: none;
	color: blue;
}

a:hover, a:active {
	text-decoration: underline;
	color: blue;
}
-->
</style>
<title>create_checkbox</title>
</head>
<body>
<br>
<b>audio_form object</b><br>
<br>
This method will create a checkbox and return a control ID.<br>
<br>
int create_checkbox(string caption, bool initial_value=false, bool read_only=false)<br>
<br>
Parameters:<br>
caption<br>
The text for the checkbox.<br>
initial_value<br>
An optional parameter specifying the initial value for the checkbox. true is checked, false is unchecked.<br>
read_only<br>
An optional parameter indicating whether the checkbox should be read only. true means the checkbox will be read only, false means it can be modified.<br>
<br>
Return value:<br>
A control ID that can be used to check the status of the control, or -1 on error.<br>
<br>
Remarks:<br>
Prepending any letter in the caption string with an ampersand (&) sign will cause a shortcut to be created for the checkbox. For example, &Subscribe will cause alt+s to be the shortcut for the Subscribe checkbox.<br>
<br>
Example:<br>
<pre>
// Make a simple form with a few buttons and a checkbox.

#include "form.bgt"

audio_form form;

void main()
{
form.create_window("Example Form", true);
int subscribe=form.create_checkbox("&Subscribe", false, false);
int ok=form.create_button("OK");
int cancel=form.create_button("E&xit");
while(true)
{
form.monitor();
wait(5);
if(form.is_pressed(ok))
{
exit();
}
if(form.is_pressed(cancel))
{
exit();
}
if((key_down(KEY_LMENU))&&(key_pressed(KEY_F4)))
{
exit();
}
}
}
</pre>
</body>
</html>