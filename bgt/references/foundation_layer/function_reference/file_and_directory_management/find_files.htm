<html>
<head>
<style type="text/css">
<!--
a:link {
	text-decoration: none;
	color: blue;
}

a:visited {
	text-decoration: none;
	color: blue;
}

a:hover, a:active {
	text-decoration: underline;
	color: blue;
}
-->
</style>
<title>Function Reference</title>
</head>
<body>
<br>
<b>find_files</b><br>
<br>
This function returns all files found matching a specified search pattern.<br>
<br>
string[] find_files(string search)<br>
<br>
Parameters:<br>
search<br>
The search pattern that is to be used when looking for files.<br>
<br>
Return value:<br>
Returns an array of file names that match the specified search pattern, or an empty array on failure.<br>
<br>
Remarks:<br>
Wildcards are accepted in the search term. An asterisk (* sign) indicates 0 or more unknown characters while a question mark (? sign) represents up to 1 unknown character.<br>
<br>
Please note that this function will only find files. To find directories, use the find_directories function.<br>
<br>
When searching using a 3-character extension, any extension starting with those 3 characters will match, even if it contains additional characters. For instance, "*.ogg" will match "test.ogg", "sound.oggs" or "bang.oggy", that is of course assuming those files exist.<br>
<br>
If an empty string is passed as a parameter, the function will assume the search term "*" which is to say all files in the current directory.<br>
<br>
This function will accept absolute or relative paths.<br>
<br>
The search term is not case sensitive.<br>
<br>
Please note that the path may not end in a trailing slash or backslash.<br>
<br>
Example:<br>
<pre>
// Find all files in the windows media folder.

void main()
{
string[] test;
test=find_files("C:\\windows/media/*.*");
for(uint counter=0; counter&lt;test.length(); counter++)
{
alert("array", "array "+counter+"="+test[counter]);
}
}
</pre>
</body>
</html>