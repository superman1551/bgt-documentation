<html>
<head>
<style type="text/css">
<!--
a:link {
	text-decoration: none;
	color: blue;
}

a:visited {
	text-decoration: none;
	color: blue;
}

a:hover, a:active {
	text-decoration: underline;
	color: blue;
}
-->
</style>
<title>freq_bend_ms</title>
</head>
<body>
<br>
<b>tone_synth object</b><br>
<br>
This method generates a given frequency or list of frequencies that will last for a specified number of milliseconds, with the additional option of being able to bend.<br>
<br>
bool freq_bend_ms(string frequencies, double bend_amount, double length, double bend_start, double bend_length)<br>
<br>
Parameters:<br>
frequencies<br>
A string specifying a frequency or list of frequencies to generate.<br>
bend_amount<br>
The amount in Hz to bend the pitch.<br>
length<br>
The length of the generated frequencies, in milliseconds.<br>
bend_start<br>
The millisecond at which to start the bend.<br>
bend_length<br>
The length of the bend, in milliseconds.<br>
<br>
Return value:<br>
true on success, false on failure.<br>
<br>
Remarks:<br>
Each frequency in the list is separated by a comma and space. Valid values are from 1 to 20000Hz. If the list does not meet the criteria the function will fail.<br>
<br>
The frequencies provided in the list will be generated together (as opposed to separately, one after the other), allowing for easier and quicker creation of chords.<br>
<br>
When specifying bend_amount, positive values bend upwards while negative values bend downwards.<br>
<br>
It is important to note that all the frequencies in a list of multiple frequencies will be bending by the same amount and therefore the end result will sound musically different to that of the start result. To ensure that the bend matches your intended chord, use the note_bend_ms method instead.<br>
<br>
Example:<br>
<pre>
// Bend a C major chord.

tone_synth synth;

void main()
{
synth.freq_bend_ms("262, 328, 394", 60, 8000, 3000, 4000);
synth.write_wave_file("wave.wav");
}
</pre>
</body>
</html>