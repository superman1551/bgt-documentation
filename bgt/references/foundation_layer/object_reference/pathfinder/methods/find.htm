<html>
<head>
<style type="text/css">
<!--
a:link {
	text-decoration: none;
	color: blue;
}

a:visited {
	text-decoration: none;
	color: blue;
}

a:hover, a:active {
	text-decoration: underline;
	color: blue;
}
-->
</style>
<title>find</title>
</head>
<body>
<br>
<b>pathfinder object</b><br>
<br>
This method starts a new path search.<br>
<br>
vector[] find(int source_x, int source_y, int destination_x, int destination_y, string user_data)<br>
<br>
Parameters:<br>
source_x<br>
The x coordinate of the source square that the search starts from.<br>
source_y<br>
The y coordinate of the source square that the search starts from.<br>
destination_x<br>
The x coordinate of the destination square that must be reached.<br>
destination_y<br>
The y coordinate of the destination square that must be reached.<br>
user_data<br>
A string of arbitrary data that will be passed to the callback during the search.<br>
<br>
Return value:<br>
An array of vectors indicating the path on success, or an empty array on failure.<br>
<br>
Remarks:<br>
Before this method may be called, a map must have been set up and a user callback must have been specified. For more information about the callback function such as its exact signature and its use, see the pathfinder_callback chapter.<br>
<br>
The user data allows you to pass along special information to the callback that may be useful while searching. This string will often contain a number which identifies the entity for whom the search is being performed, so that the callback may enforce special rules for the type of creature in question etc.<br>
<br>
This method must not be invoked from within the user callback of any pathfinder object.<br>
<br>
Please note: You may neither call this method from the constructor of a class that is instanciated in global scope, nor from an overloaded operator method.<br>
<br>
Example:<br>
See the main pathfinder chapter and the pathfinding tutorial.<br>
</body>
</html>